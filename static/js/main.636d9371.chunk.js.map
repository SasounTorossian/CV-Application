{"version":3,"sources":["components/Header.js","components/Introduction.js","components/PersonalDetails.js","components/EducationDetails.js","components/ExperienceDetails.js","components/ConfirmDetails.js","components/Success.js","components/Switcher.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","gitButton","marginRight","spacing","menuIcon","fontSize","gitIcon","scaleEfect","transition","transform","title","withRouter","history","React","useState","anchorEl","setAnchorEl","classes","handleMenuClick","pageURL","push","className","AppBar","position","Toolbar","Typography","variant","IconButton","edge","color","aria-label","target","href","GitHub","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","ListItemIcon","Info","Person","School","Work","Pageview","marginTop","centering","width","align","customFont","Introduction","Grid","container","direction","alignItems","style","minHeight","margin","item","xs","paragraph","to","textDecoration","Button","endIcon","ArrowForward","fullWidth","textField","PersonalDetails","values","handleChange","autoComplete","onChange","TextField","type","label","value","personal","name","onBlur","inputProps","autocomplete","form","error","nameError","length","helperText","email","emailError","phone","phoneError","justify","startIcon","ArrowBack","rootCard","marginBottom","EducationDetails","addEdu","removeEdu","noValidate","education","map","val","idx","Card","raised","CardContent","e","preventDefault","removeEducation","Delete","school","schoolError","course","courseError","startDateEdu","InputLabelProps","shrink","startDateEduError","endDateEdu","endDateEduError","Add","textFieldMultiline","ExperienceDetails","addExp","removeExp","experience","removeExperience","company","companyError","role","roleError","startDateExp","startDateExpError","endDateExp","endDateExpError","details","multiline","rows","detailsError","boldField","fontWeight","normal","ConfirmDetails","isValidText","isValidStyle","Divider","display","disabled","invalid","Object","keys","forEach","key","Array","isArray","object","entries","includes","invalidValues","Check","Success","Replay","Switcher","addEducation","addExperience","location","useLocation","exact","path","render","props","component","App","isEmptyInput","input","isInvalidEmail","validEmail","test","String","toLowerCase","field","dataset","fieldType","state","setState","index","splice","this","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.636d9371.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { makeStyles, \r\n        Typography, \r\n        AppBar, \r\n        Toolbar, \r\n        IconButton, \r\n        Menu, \r\n        MenuItem, \r\n        ListItemIcon  \r\n      } from '@material-ui/core'\r\nimport {Menu as MenuIcon, Info, Person, School, Work, Pageview, GitHub} from '@material-ui/icons'\r\n\r\n// Material UI styling variable to offer greater control in component styling.\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    gitButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    menuIcon: {\r\n      fontSize: \"1.6em\"\r\n    },\r\n    gitIcon: {\r\n      fontSize: \"1.3em\"\r\n    },\r\n    scaleEfect: {\r\n      transition: \"all 0.2s ease-in-out\",\r\n      \"&:hover\": {\r\n        transform: \"scale(1.1)\"\r\n      }\r\n    },\r\n    title: {\r\n      flexGrow: 1, \r\n    },\r\n\r\n  }));\r\n\r\n/* Header component which lies across the top of the screen. \r\n    Serves as title banner, as well as containing my Git\r\n    link and nav menu buttons. */\r\nconst Header = ({history}) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const classes = useStyles();\r\n\r\n    // Handler for menu pop up\r\n    const handleMenu = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    // Handler for clicking on menu\r\n    const handleMenuClick = (pageURL) => {\r\n      if(pageURL !== null) history.push(pageURL)\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    /* Renders the Appbar which creates a horizontal bar, as well as the toolbar \r\n        which contains all the project title, github link, and menu dropdown. */\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" className={classes.title}>\r\n                        CV Assistant\r\n                    </Typography>\r\n\r\n                    <IconButton \r\n                        className={`${classes.gitButton} ${classes.scaleEfect}`}\r\n                        edge=\"start\" \r\n                        color=\"inherit\" \r\n                        aria-label=\"menu\" \r\n                        target=\"_blank\"\r\n                        href=\"https://github.com/SasounTorossian\"\r\n                    >\r\n                        <GitHub className={classes.gitIcon}/>\r\n                    </IconButton>\r\n\r\n                    <IconButton \r\n                        className={classes.scaleEfect}\r\n                        edge=\"start\" \r\n                        color=\"inherit\" \r\n                        aria-label=\"menu\" \r\n                        onClick={handleMenu}\r\n                    >\r\n                        <MenuIcon className={classes.menuIcon}/>\r\n                    </IconButton>\r\n\r\n                    {/* Menu component which contains all the pages. Includes icons. */}\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={() => handleMenuClick(null)}\r\n                    >\r\n\r\n                        <MenuItem \r\n                          onClick={() => handleMenuClick(\"/CV-Application\")}\r\n                        >\r\n                          <ListItemIcon>\r\n                            <Info />\r\n                          </ListItemIcon>\r\n                          <Typography>Introduction</Typography>\r\n                        </MenuItem>\r\n                            \r\n                        <MenuItem \r\n                          onClick={() => handleMenuClick(\"/personal\")}\r\n                        >\r\n                          <ListItemIcon>\r\n                            <Person />\r\n                          </ListItemIcon>\r\n                          <Typography>Personal</Typography>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem \r\n                          onClick={() => handleMenuClick(\"/education\")}\r\n                        >\r\n                          <ListItemIcon>\r\n                            <School />\r\n                          </ListItemIcon>\r\n                          <Typography>Education</Typography>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem \r\n                          onClick={() => handleMenuClick(\"/experience\")}\r\n                        >\r\n                          <ListItemIcon>\r\n                            <Work />\r\n                          </ListItemIcon>\r\n                          <Typography>Experience</Typography>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem \r\n                          onClick={() => handleMenuClick(\"/confirm\")}\r\n                        >\r\n                          <ListItemIcon>\r\n                            <Pageview />\r\n                          </ListItemIcon>\r\n                          <Typography>Confirm</Typography>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React from 'react'\r\nimport { makeStyles, Grid, Typography, Button } from '@material-ui/core'\r\nimport { ArrowForward } from '@material-ui/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport { motion } from \"framer-motion\"\r\n\r\n// Material UI styling variable to offer greater control in component styling.\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        marginTop: \"30px\",\r\n    },\r\n    centering: {\r\n        width: \"100%\",\r\n        align: \"centre\"\r\n    },\r\n    customFont: {\r\n        fontSize: 20\r\n    },\r\n}));\r\n\r\n// Introduction component that introduces user to app.\r\nconst Introduction = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid \r\n                container \r\n                spacing={3} \r\n                direction=\"column\" \r\n                alignItems=\"center\" \r\n                style={{ \r\n                    minHeight: '50vh',\r\n                    margin: 0,\r\n                    width: '100%' \r\n                }}\r\n            >\r\n\r\n                <Grid item xs={6} className={classes.title}>\r\n                    <Typography variant=\"h4\">\r\n                        Introduction\r\n                    </Typography>\r\n                </Grid>\r\n                \r\n                <Grid item xs={6}>\r\n                    <Typography variant=\"body1\" paragraph={true} className={classes.customFont}>\r\n                        Welcome to the CV Assistant, created by Sasoun Torossian based off the Odin project curriculum. \r\n                        This assistant is made primarily made using React and Material UI, with some additional libraries\r\n                        included to streamline the experience.\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" paragraph={true} className={classes.customFont}>\r\n                        Please go through the assistant and fill out all the necessary details. \r\n                    </Typography>\r\n                    <Typography variant=\"body1\" className={classes.customFont}>\r\n                        You can go back or forward at any time using the below arrow keys, or the menu button in the\r\n                        top right. Your progress will be saved when jumping between pages, and you will be able to see\r\n                        an overview of your progress on the final confirmation page.\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <Link \r\n                        to=\"/personal\"\r\n                        style={{textDecoration: 'none'}}\r\n                    >\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            endIcon={<ArrowForward />}\r\n                            fullWidth={true}\r\n                        >\r\n                            Next Page\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Introduction","import React from 'react'\r\nimport { makeStyles, Grid, TextField, Typography, Button } from '@material-ui/core'\r\nimport { ArrowForward, ArrowBack } from '@material-ui/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Material UI styling variable to offer greater control in component styling.\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        marginTop: \"30px\",\r\n    },\r\n    centering: {\r\n        width: \"100%\",\r\n        align: \"centre\"\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n    },\r\n    fullWidth: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\n// PersonalDetails component takes name, email, and phone.\r\nconst PersonalDetails = ({values, handleChange}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid \r\n                container spacing={3} \r\n                direction=\"column\" \r\n                alignItems=\"center\" \r\n                style={{ \r\n                    minHeight: '50vh',\r\n                    margin: 0,\r\n                    width: '100%',\r\n                }}\r\n            >\r\n\r\n                <Grid item xs={6} className={classes.title}>\r\n                    <Typography variant=\"h4\">\r\n                        Personal Details\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <form autoComplete=\"off\" onChange={handleChange}>\r\n                        <TextField \r\n                            className={classes.fullWidth}\r\n                            type=\"text\"\r\n                            label=\"Name\" \r\n                            value={values.personal.name} \r\n                            onBlur={handleChange}\r\n                            inputProps={{ \r\n                                \"data-field-type\": \"name\", \r\n                                autocomplete: 'new-password',\r\n                                form: {\r\n                                    autocomplete: 'off',\r\n                                } \r\n                            }}\r\n                            error={!!values.personal.nameError && values.personal.nameError.length > 1}\r\n                            helperText={values.personal.nameError}\r\n                        />\r\n\r\n                        <TextField \r\n                            className={classes.fullWidth}\r\n                            type=\"email\"\r\n                            label=\"Email\" \r\n                            value={values.personal.email} \r\n                            onBlur={handleChange}\r\n                            inputProps={{ \r\n                                \"data-field-type\": \"email\",\r\n                                autocomplete: 'new-password',\r\n                                form: {\r\n                                    autocomplete: 'off',\r\n                                }  \r\n                            }}\r\n                            error={!!values.personal.emailError && values.personal.emailError.length > 1}\r\n                            helperText={values.personal.emailError}\r\n                        />\r\n\r\n                        <TextField \r\n                            className={classes.fullWidth}\r\n                            type=\"text\"\r\n                            label=\"Phone\" \r\n                            value={values.personal.phone} \r\n                            onBlur={handleChange}\r\n                            inputProps={{ \r\n                                \"data-field-type\": \"phone\", \r\n                                autocomplete: 'new-password',\r\n                                form: {\r\n                                    autocomplete: 'off',\r\n                                }  \r\n                            }}\r\n                            error={!!values.personal.phoneError && values.personal.phoneError.length > 1}\r\n                            helperText={values.personal.phoneError}\r\n                        />\r\n\r\n                    </form>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <Grid \r\n                        container \r\n                        direction=\"row\" \r\n                        justify=\"space-between\"\r\n                        spacing={2} \r\n                    >\r\n                        <Grid item xs={6}>\r\n                            <Link \r\n                                to=\"/CV-Application/\"\r\n                                style={{textDecoration: 'none'}}\r\n                            >\r\n                                <Button\r\n                                    fullWidth={true}\r\n                                    variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    startIcon={<ArrowBack />}\r\n                                >\r\n                                    Prev Page\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <Link \r\n                                to=\"/education\"\r\n                                style={{textDecoration: 'none'}}\r\n                            >\r\n                                <Button\r\n                                    fullWidth={true}\r\n                                    variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    endIcon={<ArrowForward />}\r\n                                >\r\n                                    Next Page\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default PersonalDetails","import React from 'react'\r\nimport { makeStyles, Grid, TextField, Typography, Button, IconButton, Card, CardContent } from '@material-ui/core'\r\nimport {ArrowForward, ArrowBack, Add, Delete} from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Material UI styling variable to offer greater control in component styling.\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        marginTop: \"30px\",\r\n    },\r\n    rootCard: {\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    centering: {\r\n        width: \"100%\",\r\n        align: \"centre\"\r\n    },\r\n    textField: {\r\n        width: \"90%\",\r\n    },\r\n}));\r\n\r\n// EducationDetails component takes array of school, course, start and end dates.\r\nconst EducationDetails = ({values, handleChange, addEdu, removeEdu}) => {\r\n    const classes = useStyles();\r\n\r\n    // Overrides default button behaviour and calls addEducation in App.js\r\n    const addEducation = (e) => { \r\n        e.preventDefault() \r\n        addEdu(e)\r\n    }\r\n\r\n    // Overrides default button behaviour and calls removeEducation in App.js\r\n    const removeEducation = (e, idx) => { \r\n        e.preventDefault() \r\n        removeEdu(idx)\r\n    }\r\n        \r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid \r\n                container \r\n                direction=\"column\" \r\n                alignItems=\"center\" \r\n                spacing={2} \r\n                style={{ \r\n                    minHeight: '50vh',\r\n                    margin: 0,\r\n                    width: '100%', \r\n                }}\r\n            >\r\n                <Grid item xs={6} className={classes.title}>\r\n                    <Typography variant=\"h4\">\r\n                        Education Details\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <form noValidate autoComplete=\"off\" onChange={handleChange}>\r\n                        {\r\n                            values.education.map((val, idx) => {\r\n                                return (\r\n                                    <Card className={classes.rootCard} raised={true} key={idx}>\r\n                                        <CardContent>\r\n                                        <Grid \r\n                                            container \r\n                                            spacing={2} \r\n                                            alignItems=\"center\"\r\n                                            align=\"center\"\r\n                                            justify=\"center\"\r\n                                            style={{ minHeight: \"30vh\" }}\r\n                                        >\r\n                                            <Grid item xs={11} >\r\n                                                <Typography variant=\"h5\">\r\n                                                    {`Education ${idx+1}`}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={1}>\r\n                                                <IconButton\r\n                                                    edge=\"start\"\r\n                                                    color=\"secondary\"\r\n                                                    onClick={(e) => removeEducation(e, idx)}\r\n                                                >\r\n                                                    <Delete/>\r\n                                                </IconButton>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <TextField \r\n                                                    className={classes.textField}\r\n                                                    type=\"text\"\r\n                                                    label={`School ${idx+1}`}\r\n                                                    value={val.school} \r\n                                                    onBlur={handleChange}\r\n                                                    inputProps={{ \"data-id\": idx, \"data-field-type\": \"school\" }}\r\n                                                    error={!!val.schoolError && val.schoolError.length > 1}\r\n                                                    helperText={val.schoolError}\r\n                                                />  \r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <TextField \r\n                                                    className={classes.textField}\r\n                                                    type=\"text\"\r\n                                                    label={`Course ${idx+1}`}\r\n                                                    value={val.course} \r\n                                                    onBlur={handleChange}\r\n                                                    inputProps={{ \"data-id\": idx, \"data-field-type\": \"course\" }}\r\n                                                    error={!!val.courseError && val.courseError.length > 1}\r\n                                                    helperText={val.courseError}\r\n                                                />   \r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <TextField \r\n                                                    className={classes.textField}\r\n                                                    type=\"date\"\r\n                                                    label={`Start Date ${idx+1}`}\r\n                                                    value={val.startDateEdu} \r\n                                                    onBlur={handleChange}\r\n                                                    inputProps={{ \"data-id\": idx, \"data-field-type\": \"startDateEdu\" }}\r\n                                                    InputLabelProps={{ shrink: true }}\r\n                                                    error={!!val.startDateEduError && val.startDateEduError.length > 1}\r\n                                                    helperText={val.startDateEduError}\r\n                                                />   \r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <TextField \r\n                                                    className={classes.textField}\r\n                                                    type=\"date\"\r\n                                                    label={`End Date ${idx+1}`}\r\n                                                    value={val.endDateEdu}\r\n                                                    onBlur={handleChange}\r\n                                                    inputProps={{ \"data-id\": idx, \"data-field-type\": \"endDateEdu\" }}\r\n                                                    InputLabelProps={{ shrink: true }}\r\n                                                    error={!!val.endDateEduError && val.endDateEduError.length > 1}\r\n                                                    helperText={val.endDateEduError}\r\n                                                />   \r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                )\r\n                            })\r\n                        }\r\n                    </form>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <Button\r\n                            fullWidth={true}\r\n                            onClick={addEducation}\r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            endIcon={<Add />}\r\n                        >\r\n                            Add new education\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <Grid \r\n                        container \r\n                        direction=\"row\" \r\n                        justify=\"space-between\"\r\n                        spacing={2} \r\n                    >\r\n                        <Grid item xs={6}>\r\n                            <Link \r\n                                to=\"/personal\"\r\n                                style={{textDecoration: 'none'}}\r\n                            >\r\n                                <Button\r\n                                    fullWidth={true}\r\n                                    variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    startIcon={<ArrowBack />}\r\n                                >\r\n                                    Prev Page\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <Link \r\n                                to=\"/experience\"\r\n                                style={{textDecoration: 'none'}}\r\n                            >\r\n                                <Button\r\n                                    fullWidth={true}\r\n                                    variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    endIcon={<ArrowForward />}\r\n                                >\r\n                                    Next Page\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default EducationDetails","import React from 'react'\r\nimport { makeStyles, Grid, TextField, Typography, Button, IconButton, Card, CardContent } from '@material-ui/core'\r\nimport {ArrowForward, ArrowBack, Add, Delete} from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Material UI styling variable to offer greater control in component styling.\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        marginTop: \"30px\",\r\n    },\r\n    rootCard: {\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    },\r\n    centering: {\r\n        width: \"100%\",\r\n        align: \"centre\"\r\n    },\r\n    textField: {\r\n        width: \"90%\",\r\n    },\r\n    textFieldMultiline: {\r\n        width: \"95%\",\r\n    },\r\n}));\r\n\r\n// ExperienceDetails component takes array of company, role, start and end dates, and details.\r\nconst ExperienceDetails = ({values, handleChange, addExp, removeExp}) => {\r\n    const classes = useStyles();\r\n\r\n    // Overrides default button behaviour and calls addExperience in App.js\r\n    const addExperience = (e) => { \r\n        e.preventDefault() \r\n        addExp()\r\n    }\r\n\r\n    // Overrides default button behaviour and calls removeExperience in App.js\r\n    const removeExperience = (e, idx) => { \r\n        e.preventDefault() \r\n        removeExp(idx)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid \r\n                container \r\n                direction=\"column\" \r\n                alignItems=\"center\" \r\n                spacing={2} \r\n                style={{ \r\n                    minHeight: '50vh',\r\n                    margin: 0,\r\n                    width: '100%',\r\n                }}\r\n            >\r\n                <Grid item xs={6} className={classes.title}>\r\n                    <Typography variant=\"h4\" >\r\n                        Experience Details\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <form noValidate autoComplete=\"off\" onChange={handleChange}>\r\n                        {\r\n                            values.experience.map((val, idx) => {\r\n                                return (\r\n                                    <Card className={classes.rootCard} raised={true} key={idx}>\r\n                                        <CardContent>\r\n                                        <Grid \r\n                                            container \r\n                                            spacing={2} \r\n                                            alignItems=\"center\"\r\n                                            align=\"center\"\r\n                                            style={{ minHeight: \"30vh\" }}\r\n                                        >\r\n\r\n                                            <Grid item xs={11} >\r\n                                                <Typography variant=\"h5\" align=\"center\">\r\n                                                    {`Experience ${idx+1}`}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            \r\n                                            <Grid item xs={1}>\r\n                                                    <IconButton\r\n                                                        edge=\"start\"\r\n                                                        color=\"secondary\"\r\n                                                        onClick={(e) => removeExperience(e, idx)}\r\n                                                    >\r\n                                                        <Delete/>\r\n                                                    </IconButton>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>    \r\n                                                <TextField \r\n                                                className={classes.textField}\r\n                                                type=\"text\"\r\n                                                label={`Company ${idx+1}`}\r\n                                                value={val.company} \r\n                                                onBlur={handleChange}\r\n                                                inputProps={{ \"data-id\": idx, \"data-field-type\": \"company\" }}\r\n                                                error={!!val.companyError && val.companyError.length > 1}\r\n                                                helperText={val.companyError}\r\n                                                />   \r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <TextField \r\n                                                className={classes.textField}\r\n                                                    type=\"text\"\r\n                                                    label={`Role ${idx+1}`}\r\n                                                    value={val.role} \r\n                                                    onBlur={handleChange}\r\n                                                    inputProps={{ \"data-id\": idx, \"data-field-type\": \"role\" }}\r\n                                                    error={!!val.roleError && val.roleError.length > 1}\r\n                                                    helperText={val.roleError}\r\n                                                />   \r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <TextField \r\n                                                    className={classes.textField}\r\n                                                    type=\"date\"\r\n                                                    label={`Start Date ${idx+1}`}\r\n                                                    value={val.startDateExp} \r\n                                                    onBlur={handleChange}\r\n                                                    inputProps={{ \"data-id\": idx, \"data-field-type\": \"startDateExp\" }}\r\n                                                    InputLabelProps={{ shrink: true }}\r\n                                                    error={!!val.startDateExpError && val.startDateExpError.length > 1}\r\n                                                    helperText={val.startDateExpError}\r\n                                                />   \r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <TextField \r\n                                                    className={classes.textField}\r\n                                                    type=\"date\"\r\n                                                    label={`End Date ${idx+1}`}\r\n                                                    value={val.endDateExp} \r\n                                                    onBlur={handleChange}\r\n                                                    inputProps={{ \"data-id\": idx, \"data-field-type\": \"endDateExp\" }}\r\n                                                    InputLabelProps={{ shrink: true }}\r\n                                                    error={!!val.endDateExpError && val.endDateExpError.length > 1}\r\n                                                    helperText={val.endDateExpError}\r\n                                                />   \r\n                                            </Grid>\r\n                                            \r\n                                            <Grid item xs={12}>\r\n                                                <TextField \r\n                                                    className={classes.textFieldMultiline}\r\n                                                    type=\"text\"\r\n                                                    label={`Details of job ${idx+1}`}\r\n                                                    value={val.details} \r\n                                                    onBlur={handleChange}\r\n                                                    inputProps={{ \"data-id\": idx, \"data-field-type\": \"details\" }}\r\n                                                    multiline\r\n                                                    margin=\"none\"\r\n                                                    rows={5}\r\n                                                    error={!!val.detailsError && val.detailsError.length > 1}\r\n                                                    helperText={val.detailsError}\r\n                                                />   \r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        </CardContent>\r\n                                    </Card> \r\n                                )\r\n                            })\r\n                        }\r\n                    </form>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <Button \r\n                            fullWidth={true}\r\n                            onClick={addExperience}\r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            endIcon={<Add />}\r\n                        >\r\n                            Add new experience\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <Grid \r\n                        container \r\n                        direction=\"row\" \r\n                        justify=\"space-between\"\r\n                        spacing={2} \r\n                    >\r\n                        <Grid item xs={6}>\r\n                            <Link \r\n                                to=\"/education\"\r\n                                style={{textDecoration: 'none'}}\r\n                            >\r\n                                <Button\r\n                                    fullWidth={true}\r\n                                    variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    startIcon={<ArrowBack />}\r\n                                >\r\n                                    Prev Page\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <Link \r\n                                to=\"/confirm\"\r\n                                style={{textDecoration: 'none'}}\r\n                            >\r\n                                <Button\r\n                                    fullWidth={true}\r\n                                    variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    endIcon={<ArrowForward />}\r\n                                >\r\n                                    Next Page\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ExperienceDetails","import React from 'react'\r\nimport { makeStyles, Grid, Typography, Button, Divider } from '@material-ui/core'\r\nimport { Check, ArrowBack } from '@material-ui/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Material UI styling variable to offer greater control in component styling.\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        marginTop: \"30px\",\r\n    },\r\n    centering: {\r\n        width: \"100%\",\r\n        align: \"centre\"\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n    },\r\n    fullWidth: {\r\n        width: \"100%\"\r\n    },\r\n    boldField: {\r\n        fontSize: 19,\r\n        fontWeight: 600\r\n    },\r\n    normal: {\r\n        fontSize: 19\r\n    },\r\n    error: {\r\n        // fontWeight: 600,\r\n        fontSize: 19,\r\n        color: \"red\"\r\n    }\r\n}));\r\n\r\n/* ConfirmDetails shows overview of previously inputted values, and \r\n    allows use to progress if all values are filled in. */\r\nconst ConfirmDetails = ({values}) => {\r\n    const classes = useStyles();\r\n\r\n    // Used to  cycle through state object of parent in order to determine all necessary fields are filled.\r\n    const invalidValues = () => {\r\n        let invalid = false // Initates variable to be valid at first.\r\n        let objectKeys = Object.keys(values) // Extract keys: personal, education, experience\r\n        objectKeys.forEach(key => {\r\n            if(Array.isArray(values[key])){ // Separates personal (not array), with education and experience (arrays)\r\n                if(values[key].length === 0) { // edcucation or experience array is empty, form is invalid.\r\n                    invalid = true\r\n                }\r\n                values[key].forEach(object => { // Extracts array of object from education or experience\r\n                    let objectEntries = Object.entries(object) // Array of arrays containing key:value pair as first and second element. [ [2], [2], ......]\r\n                    for(const [key, value] of objectEntries) { // Destructures key:value into separate variables\r\n                        if([\"school\", \"course\", \"startDateEdu\", \"endDateEdu\"].includes(key) ||\r\n                            [\"company\", \"role\", \"startDateExp\", \"endDateExp\", \"details\"].includes(key)) { // Only checks the values of these keys\r\n                            if(!value) { // If value of above keys are empty, return true\r\n                                invalid = true\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                let objectEntries = Object.entries(values[key]) // Array of arrays containing key:value pair as first and second element. [ [2], [2], ......]\r\n                for(const [key, value] of objectEntries) { // Destructures key:value into separate variables\r\n                    if([\"name\", \"email\", \"phone\"].includes(key)) { // Only checks the values of these keys\r\n                        if(!value) { // If value of above keys are empty, return true\r\n                            invalid = true        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        return invalid\r\n    }\r\n\r\n    // Checks if valid value, and returns approriate message.\r\n    const isValidText = (value) => { return value ? value : \"Required\" }\r\n\r\n    // Checks if valid value, and returns appropriate syle.\r\n    const isValidStyle = (value) => { return value ? classes.normal : classes.error }\r\n\r\n    // Checks if valid value, and returns appropriate display.\r\n    const isValidDisplay = (value) => { return value ? \"initial\" : \"inline\" }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid \r\n                container \r\n                spacing={2} \r\n                direction=\"column\" \r\n                alignItems=\"center\" \r\n                style={{\r\n                    margin: 0,\r\n                    width: '100%',\r\n                  }}\r\n            >\r\n\r\n                <Grid item xs={6} className={classes.title}>\r\n                    <Typography variant=\"h4\">\r\n                        Confirm Details\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <Grid \r\n                        container \r\n                        direction=\"row\" \r\n                        justify=\"space-between\"\r\n                        align=\"left\"\r\n                        spacing={3} \r\n                    >\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid \r\n                                container \r\n                                direction=\"row\" \r\n                                justify=\"flex-start\"\r\n                                spacing={1} \r\n                            >   \r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h5\">\r\n                                        Personal\r\n                                    </Typography>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <Divider variant=\"fullWidth\" />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                        {`Name: `}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(values.personal.name)} >\r\n                                        {isValidText(values.personal.name)}\r\n                                    </Typography>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                        {`Email: `}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(values.personal.email)}>\r\n                                        {isValidText(values.personal.email)}\r\n                                    </Typography>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                        {`Phone: `}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(values.personal.phone)}>\r\n                                        {isValidText(values.personal.phone)}\r\n                                    </Typography>\r\n                                </Grid>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            {\r\n                                values.education.map((val, idx) => {\r\n                                    return (\r\n                                        <Grid \r\n                                            container \r\n                                            direction=\"row\" \r\n                                            justify=\"flex-start\"\r\n                                            spacing={1} \r\n                                            key={idx}\r\n                                        >   \r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"h5\">\r\n                                                    {`Education ${idx+1}`}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12}>\r\n                                                <Divider variant=\"fullWidth\" />\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                                    {`School ${idx+1}: `}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(val.school)}>\r\n                                                    {isValidText(val.school)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                                    {`Course ${idx+1}: `}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(val.course)}>\r\n                                                    {isValidText(val.course)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                                    {`Start Date ${idx+1}: `}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(val.startDateEdu)}>\r\n                                                    {isValidText(val.startDateEdu)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                                    {`End Date ${idx+1}: `}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(val.endDateEdu)}>\r\n                                                    {isValidText(val.endDateEdu)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n\r\n                                        </Grid>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            {\r\n                                values.experience.map((val, idx) => {\r\n                                    return (\r\n                                        <Grid \r\n                                            container \r\n                                            direction=\"row\" \r\n                                            justify=\"flex-start\"\r\n                                            spacing={1} \r\n                                            key={idx}\r\n                                        >   \r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"h5\">\r\n                                                    {`Experience ${idx+1}`}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12}>\r\n                                                <Divider variant=\"fullWidth\" />\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                                    {`Company ${idx+1}: `}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(val.company)}>\r\n                                                    {isValidText(val.company)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                                    {`Role ${idx+1}: `}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(val.role)}>\r\n                                                    {isValidText(val.role)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                                    {`Start Date ${idx+1}: `}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(val.startDateExp)}>\r\n                                                    {isValidText(val.startDateExp)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={6}>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                                    {`End Date ${idx+1}: `}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={isValidStyle(val.endDateExp)}>\r\n                                                    {isValidText(val.endDateExp)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"body1\" display=\"inline\" className={classes.boldField}>\r\n                                                    {`Details ${idx+1}: `}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" paragraph={true} display={isValidDisplay(val.details)} className={isValidStyle(val.details)}>\r\n                                                    {isValidText(val.details)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n\r\n\r\n                                        </Grid>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <Grid \r\n                        container \r\n                        direction=\"row\" \r\n                        justify=\"space-between\"\r\n                        spacing={2} \r\n                    >\r\n                        <Grid item xs={6}>\r\n                            <Link \r\n                                to=\"/experience\"\r\n                                style={{textDecoration: 'none'}}\r\n                            >\r\n                                <Button\r\n                                    fullWidth={true}\r\n                                    variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    startIcon={<ArrowBack />}\r\n                                >\r\n                                    Prev Page\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <Link \r\n                                to=\"/success\"\r\n                                style={{textDecoration: 'none'}}\r\n                            >\r\n                                <Button\r\n                                    fullWidth={true}\r\n                                    variant=\"contained\" \r\n                                    color=\"primary\"\r\n                                    disabled={invalidValues()}\r\n                                    endIcon={<Check />}\r\n                                >\r\n                                    Finish\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ConfirmDetails","import React from 'react'\r\nimport { makeStyles, Grid, Typography, Button } from '@material-ui/core'\r\nimport { Replay } from '@material-ui/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Material UI styling variable to offer greater control in component styling.\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        marginTop: \"30px\",\r\n    },\r\n    centering: {\r\n        width: \"100%\",\r\n        align: \"centre\"\r\n    },\r\n    customFont: {\r\n        fontSize: 20\r\n    },\r\n}));\r\n\r\n/* Final page to show user that their application has been successful. \r\n    Gives user option to back and redo if they so choose.*/\r\nconst Success = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid \r\n                container \r\n                spacing={3} \r\n                direction=\"column\" \r\n                alignItems=\"center\" \r\n                style={{ \r\n                    minHeight: '50vh',\r\n                    margin: 0,\r\n                    width: '100%' \r\n                }}\r\n            >\r\n\r\n                <Grid item xs={6} className={classes.title}>\r\n                    <Typography variant=\"h4\">\r\n                        Success\r\n                    </Typography>\r\n                </Grid>\r\n                \r\n                <Grid item xs={6}>\r\n                    <Typography variant=\"body1\" paragraph={true} className={classes.customFont}>\r\n                        You have completed the cv assistant. We hope you had an excellent experience.\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" className={classes.customFont}>\r\n                        Please use the below button to go back to the start. You can redo the \r\n                        entire assistant again if you so choose.\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={6} className={classes.centering}>\r\n                    <Link \r\n                        to=\"/CV-Application\"\r\n                        style={{textDecoration: 'none'}}\r\n                    >\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            endIcon={<Replay />}\r\n                            fullWidth={true}\r\n                        >\r\n                            Go Back To Introduction\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Success","import React from 'react'\r\nimport Introduction from \"./Introduction\"\r\nimport PersonalDetails from \"./PersonalDetails\"\r\nimport EducationDetails from \"./EducationDetails\"\r\nimport ExperienceDetails from \"./ExperienceDetails\"\r\nimport ConfirmDetails from \"./ConfirmDetails\"\r\nimport Success from \"./Success\"\r\nimport {Route, useLocation} from 'react-router-dom'\r\nimport SlideRoutes from 'react-slide-routes';\r\n\r\n/* Switcher component for handling routing between different components. \r\n    Was originally contained in the App.js file, but was later extracted in order to \r\n    make into functional component. This allowed for the useLocation module to be used\r\n    along with the SlideRoutes library to add a carousel effect to the page transitions. */\r\nconst Switcher = ({values, handleChange, addEducation, removeEducation, addExperience, removeExperience}) => {\r\n    const location = useLocation()\r\n\r\n    /* SlideRoutes adds carousel effect. Introduction page route is '/' so that it \r\n        will load as the defualt page at the start. */\r\n    return (\r\n        <SlideRoutes location={location}>\r\n            <Route\r\n                exact path=\"/CV-Application/\"\r\n                render={(props) => (\r\n                <Introduction \r\n                    {...props} \r\n                    handleChange={handleChange} \r\n                />\r\n                )} \r\n            />\r\n\r\n            <Route\r\n                path = \"/personal\" \r\n                render={(props) => (\r\n                <PersonalDetails \r\n                    {...props} \r\n                    values={values}\r\n                    handleChange={handleChange} \r\n                />\r\n                )} \r\n            />\r\n\r\n            <Route\r\n            path = \"/education\" \r\n            render={(props) => (\r\n                <EducationDetails \r\n                    {...props} \r\n                    values={values}\r\n                    handleChange = {handleChange}\r\n                    addEdu={addEducation}\r\n                    removeEdu={removeEducation}\r\n                />\r\n                )} \r\n            />\r\n\r\n            <Route\r\n            path = \"/experience\" \r\n            render={(props) => (\r\n                <ExperienceDetails \r\n                    {...props} \r\n                    values={values}\r\n                    handleChange = {handleChange}\r\n                    addExp={addExperience}\r\n                    removeExp={removeExperience}\r\n                />\r\n                )} \r\n            />\r\n\r\n            <Route\r\n            path = \"/confirm\" \r\n            render={(props) => (\r\n                <ConfirmDetails \r\n                {...props} \r\n                values={values}\r\n                />\r\n            )} \r\n            />\r\n\r\n            <Route\r\n                exact path = \"/success\" \r\n                component={Success}\r\n            />  \r\n        </SlideRoutes>\r\n    )\r\n} \r\n\r\nexport default Switcher","import React, {Component} from 'react'\r\nimport Header from \"./components/Header\"\r\nimport Switcher from \"./components/Switcher\"\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport './App.css';\r\n\r\n// App component controls the high-level state, as well as the logic of adding/removing/updating detials.\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    /* State contains all the details, split into personal, education, and experience\r\n    Each variable also as an associated error value to show if variable is in error mode.\r\n    This error variable will be used in the Material UI TextField component for displaying errors.*/\r\n    this.state = {\r\n      personal: {\r\n        name: \"\", \r\n        email: \"\",\r\n        phone: \"\",\r\n        nameError: \" \",\r\n        emailError: \" \",\r\n        phoneError: \" \",\r\n      },\r\n      education: [{\r\n        school: \"\",\r\n        course: \"\",\r\n        startDateEdu: \"\",\r\n        endDateEdu: \"\",\r\n        schoolError: \" \",\r\n        courseError: \" \",\r\n        startDateEduError: \" \",\r\n        endDateEduError: \" \",      \r\n      }],\r\n      experience: [{\r\n        company: \"\",\r\n        role: \"\",\r\n        startDateExp: \"\",\r\n        endDateExp: \"\",\r\n        details: \"\",\r\n        companyError: \" \",\r\n        roleError: \" \",\r\n        startDateExpError: \" \",\r\n        endDateExpError: \" \",\r\n        detailsError: \" \",      \r\n      }],\r\n    }\r\n  }\r\n\r\n  // Checks if the input is empty, and assigns appropriate value to error variable\r\n  isEmptyInput = (input) => { return input === \"\" ? \"Required\" : \" \" } \r\n\r\n  // Checks if the input is valid email or empty, and assigns appropriate value to error variable\r\n  isInvalidEmail = (input) => { return input === \"\" ? \"Required\" : !this.validEmail(input) ? \"Invalid\" : \" \" }\r\n\r\n  // Checks if the input is valid email via regex matching.\r\n  validEmail = (email) => {\r\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  // Handles all changes from children components by checking dataset field.\r\n  handleChange = (e) => {\r\n    let field = e.target.dataset.fieldType\r\n    let id = e.target.dataset.id\r\n    let value = e.target.value\r\n    \r\n    if([\"name\", \"email\", \"phone\"].includes(field)) {\r\n      let personal = {...this.state.personal}\r\n      personal[field] = value\r\n      personal[field+\"Error\"] = (field === \"email\") ? this.isInvalidEmail(value) : this.isEmptyInput(value)\r\n      this.setState({ personal })\r\n    }\r\n    else if([\"school\", \"course\", \"startDateEdu\", \"endDateEdu\"].includes(field)) {\r\n      let education = [...this.state.education]\r\n      education[id][field] = value\r\n      education[id][field+\"Error\"] = this.isEmptyInput(value)\r\n      this.setState({ education })\r\n    }\r\n    else if([\"company\", \"role\", \"startDateExp\", \"endDateExp\", \"details\"].includes(field)) {\r\n      let experience = [...this.state.experience]\r\n      experience[id][field] = value\r\n      experience[id][field+\"Error\"] = this.isEmptyInput(value)\r\n      this.setState({ experience })\r\n    }\r\n  }\r\n\r\n  // Creates new education object and adds to education array\r\n  addEducation = () => {\r\n    const newEdu = {\r\n      school: \"\",\r\n      course: \"\",\r\n      startDateEdu: \"\",\r\n      endDateEdu: \"\",\r\n      schoolError: \" \",\r\n      courseError: \" \",\r\n      startDateEduError: \" \",\r\n      endDateEduError: \" \",      \r\n    }\r\n    this.setState({ education: [...this.state.education, newEdu] })       \r\n  }\r\n\r\n  // Removes education object at index\r\n  removeEducation = (index) => {\r\n    let education = [...this.state.education]\r\n    education.splice(index, 1)\r\n    this.setState({ education: education })       \r\n  }\r\n\r\n  // Creates new experience object and adds to experience array\r\n  addExperience = () => {\r\n    const newExp = {\r\n      company: \"\",\r\n      role: \"\",\r\n      startDateExp: \"\",\r\n      endDateExp: \"\",\r\n      details: \"\",\r\n      companyError: \" \",\r\n      roleError: \" \",\r\n      startDateExpError: \" \",\r\n      endDateExpError: \" \",\r\n      detailsError: \" \",      \r\n    }\r\n    this.setState({ experience: [...this.state.experience, newExp] })       \r\n  }\r\n\r\n  // Removes experience object at index\r\n  removeExperience = (index) => {\r\n    let experience = [...this.state.experience]\r\n    experience.splice(index, 1)\r\n    this.setState({ experience: experience })       \r\n  }\r\n\r\n  // Main render. Uses router to switch between between pages. Header is always rendered at the top.\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Header />\r\n        <Switcher \r\n          values={this.state} \r\n          handleChange = {this.handleChange}\r\n          addEducation = {this.addEducation}\r\n          removeEducation = {this.removeEducation}\r\n          addExperience = {this.addExperience}\r\n          removeExperience = {this.removeExperience}\r\n        />\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}